name: test

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: postgres # NOTE github ci will complain being `unhealthy` without a password
        ports: ['5432:5432']
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server

    steps:

    - uses: actions/checkout@v2.2.0

    - uses: actions/setup-ruby@v1

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    # https://github.com/actions/cache/blob/main/examples.md#node---yarn
    - name: get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - uses: actions/setup-node@v2.1.1

    - name: install deps
      env:
        RAILS_ENV: test
      run: |
        sudo apt-get -yqq install libpq-dev
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --with test
        yarn install

    - name: prepare db
      env:
        RAILS_ENV: test
        PGHOST: localhost
        PGUSER: runner
        PGPASSWORD: postgres
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate

    - name: rspec
      env:
        RAILS_ENV: test
        PGHOST: localhost
        PGUSER: runner
        PGPASSWORD: postgres
      run: |
        bundle exec rspec

    - name: codecov
      uses: codecov/codecov-action@v1.5.0
      with:
        file: './coverage/.resultset.json'
